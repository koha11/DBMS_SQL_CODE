USE master
GO
CREATE LOGIN DucTrung 
	WITH PASSWORD = N'DucTrung',
	CHECK_EXPIRATION=OFF,
	CHECK_POLICY=OFF
GO

USE QLTTTA_11
GO
CREATE USER DucTrung FOR LOGIN DucTrung

CREATE ROLE teacher;
GRANT SELECT ON TEACHER TO teacher;
GRANT SELECT ON STUDENT TO teacher;
GRANT SELECT ON TIMETABLE TO teacher;
GRANT SELECT ON RESULT TO teacher;
GRANT SELECT ON CLASS_DETAIL TO teacher;
GRANT SELECT ON CLASS TO teacher;
GRANT SELECT ON COURSE TO teacher;
GRANT UPDATE ON RESULT TO teacher;
GRANT INSERT ON RESULT TO teacher;

GO
CREATE FUNCTION TEACHER_SELECT(@TEACHER_ID VARCHAR(10))
RETURNS @INFORMATION TABLE 
(
    Teacher_Name NVARCHAR(50),
    Course_Name NVARCHAR(50),
    Class_ID VARCHAR(10),
    Classroom VARCHAR(10),
    Student_ID VARCHAR(10),
    Student_Name NVARCHAR(50),
    Student_Gender VARCHAR(5),
    Student_Phone VARCHAR(20),
    Student_Address NVARCHAR(50),
    Student_Email NVARCHAR(50),
    Timetable_Weeklyday SMALLINT,
    Timetable_Dayperiod TIME
)
AS BEGIN
    INSERT INTO @INFORMATION
    SELECT T.TR_NAME, 
	   C.COURSE_NAME, 
           CL.CLASS_ID, CL.CLASSROOM, 
           S.STUDENT_ID, S.ST_NAME, S.ST_GENDER, S.ST_PHONE, S.ST_ADDRESS, S.ST_EMAIL, 
           TT.WEEKLYDAY, TT.DAYPERIOD
    FROM TEACHER T INNER JOIN CLASS CL ON T.TEACHER_ID = CL.TEACHER_ID
				   INNER JOIN COURSE C ON CL.COURSE_ID = C.COURSE_ID
				   INNER JOIN RESULT R ON CL.CLASS_ID = R.CLASS_ID
				   INNER JOIN STUDENT S ON R.STUDENT_ID = S.STUDENT_ID
				   INNER JOIN TIMETABLE TT ON CL.CLASS_ID = TT.CLASS_ID
    WHERE T.TEACHER_ID = @TEACHER_ID;
    RETURN;
END;

GO

SELECT * FROM TEACHER_SELECT('T003');

DROP FUNCTION TEACHER_SELECT
